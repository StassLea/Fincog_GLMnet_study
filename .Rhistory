# INSTALL AND LOAD PACKAGES ################################
if(!require(devtools)) install.packages("devtools")
devtools::install_github("kassambara/ggpubr")
# Installs pacman ("package manager") if needed
if (!require("pacman")) install.packages("pacman")
library(ggplot2)
library(datasets)
library(readxl)
library(tidyverse)
library(ggpubr)
# INSTALL AND LOAD PACKAGES ################################
if(!require(devtools)) install.packages("devtools")
devtools::install_github("kassambara/ggpubr")
# Installs pacman ("package manager") if needed
if (!require("pacman")) install.packages("pacman")
library(readxl)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(glmnet)
install.packages("rlang")
install.packages("rlang")
remove.packages(rlang)
remove.packages(rlang)
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages('rlang')
install.packages("rlang")
# INSTALL AND LOAD PACKAGES ################################
if(!require(devtools)) install.packages("devtools")
devtools::install_github("kassambara/ggpubr")
# Installs pacman ("package manager") if needed
if (!require("pacman")) install.packages("pacman")
##################################################3
library(readxl)
library(tidyverse)
library(ggpubr)
library(rstatix)
library(caret)
library(glmnet)
library(mlbench)
library(psych)
# Clear environment
rm(list = ls())
# Clear console
cat("\014")  # ctrl+L
#load data set ##############################################
setwd("C:/Users/stass/OneDrive/Desktop/5yearProject")           # working directory CHANGE
Fincog_Data <- read_excel("Datasets/Fincog_Imp.xlsx")           # DATA SET
Fincog_Data <- as.data.frame(Fincog_Data[c(-1)])
str(Fincog_Data)
data <- Fincog_Data[c(1:75,76)]
names(data)[length(data)] <- "y_res"
# Custom Control Parameters
custom <- trainControl(method = "repeatedcv",
number = 10,
repeats = 5,
verboseIter = T)
# Ridge Regression
set.seed(1222)
ridge <- train(y_res ~ .,
data,
method = 'glmnet',
tuneGrid = expand.grid(alpha = 0,
lambda = seq(1 ,200, length=100)),
trControl = custom)
# Plot Results
plot(ridge)
source("C:/Users/stass/OneDrive/Desktop/5yearProject/Rscript/GLMnet.R")
# Plot Results
plot(ridge)
plot(ridge$finalModel, xvar = "lambda", label = T)
plot(ridge$finalModel, xvar = "lambda", label = T)
plot(ridge$finalModel, xvar = 'dev', label=T)
plot(varImp(ridge, scale=T))
# Lasso Regression
set.seed(1222)
lasso <- train(y_res ~ .,
data,
method = 'glmnet',
tuneGrid = expand.grid(alpha = 1,
lambda = seq(0.0001, 1.5, length=30)),
trControl = custom)
# Plot Results
plot(lasso)
lasso
plot(lasso$finalModel, xvar = 'lambda', label=T)
plot(lasso$finalModel, xvar = 'dev', label=T)
plot(varImp(lasso, scale=T))
# Elastic Net Regression
set.seed(1222)
en <- train(y_res ~ .,
data,
method = 'glmnet',
tuneGrid = expand.grid(alpha = seq(0,1, length=10),
lambda = seq(0.0001, 1.5, length=30)),
trControl = custom)
# Plot Results
plot(en)
en
plot(en$finalModel, xvar = 'lambda', label=T)
plot(en$finalModel, xvar = 'dev', label=T)
plot(varImp(en))
